//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public STGU3D.ShiftComponent shift { get { return (STGU3D.ShiftComponent)GetComponent(GameComponentsLookup.Shift); } }
    public bool hasShift { get { return HasComponent(GameComponentsLookup.Shift); } }

    public void AddShift(bool newIsShifting) {
        var index = GameComponentsLookup.Shift;
        var component = (STGU3D.ShiftComponent)CreateComponent(index, typeof(STGU3D.ShiftComponent));
        component.isShifting = newIsShifting;
        AddComponent(index, component);
    }

    public void ReplaceShift(bool newIsShifting) {
        var index = GameComponentsLookup.Shift;
        var component = (STGU3D.ShiftComponent)CreateComponent(index, typeof(STGU3D.ShiftComponent));
        component.isShifting = newIsShifting;
        ReplaceComponent(index, component);
    }

    public void RemoveShift() {
        RemoveComponent(GameComponentsLookup.Shift);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherShift;

    public static Entitas.IMatcher<GameEntity> Shift {
        get {
            if (_matcherShift == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Shift);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherShift = matcher;
            }

            return _matcherShift;
        }
    }
}
