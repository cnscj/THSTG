//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public STGU3D.InvincibleComponent invincible { get { return (STGU3D.InvincibleComponent)GetComponent(GameComponentsLookup.Invincible); } }
    public bool hasInvincible { get { return HasComponent(GameComponentsLookup.Invincible); } }

    public void AddInvincible(float newTime, bool newIsInvincible) {
        var index = GameComponentsLookup.Invincible;
        var component = (STGU3D.InvincibleComponent)CreateComponent(index, typeof(STGU3D.InvincibleComponent));
        component.time = newTime;
        component.isInvincible = newIsInvincible;
        AddComponent(index, component);
    }

    public void ReplaceInvincible(float newTime, bool newIsInvincible) {
        var index = GameComponentsLookup.Invincible;
        var component = (STGU3D.InvincibleComponent)CreateComponent(index, typeof(STGU3D.InvincibleComponent));
        component.time = newTime;
        component.isInvincible = newIsInvincible;
        ReplaceComponent(index, component);
    }

    public void RemoveInvincible() {
        RemoveComponent(GameComponentsLookup.Invincible);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherInvincible;

    public static Entitas.IMatcher<GameEntity> Invincible {
        get {
            if (_matcherInvincible == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Invincible);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherInvincible = matcher;
            }

            return _matcherInvincible;
        }
    }
}
