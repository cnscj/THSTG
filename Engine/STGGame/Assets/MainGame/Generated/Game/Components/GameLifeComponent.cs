//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public STGU3D.LifeComponent life { get { return (STGU3D.LifeComponent)GetComponent(GameComponentsLookup.Life); } }
    public bool hasLife { get { return HasComponent(GameComponentsLookup.Life); } }

    public void AddLife(int newMaxLife, int newLife, int newLastLife) {
        var index = GameComponentsLookup.Life;
        var component = (STGU3D.LifeComponent)CreateComponent(index, typeof(STGU3D.LifeComponent));
        component.maxLife = newMaxLife;
        component.life = newLife;
        component.lastLife = newLastLife;
        AddComponent(index, component);
    }

    public void ReplaceLife(int newMaxLife, int newLife, int newLastLife) {
        var index = GameComponentsLookup.Life;
        var component = (STGU3D.LifeComponent)CreateComponent(index, typeof(STGU3D.LifeComponent));
        component.maxLife = newMaxLife;
        component.life = newLife;
        component.lastLife = newLastLife;
        ReplaceComponent(index, component);
    }

    public void RemoveLife() {
        RemoveComponent(GameComponentsLookup.Life);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherLife;

    public static Entitas.IMatcher<GameEntity> Life {
        get {
            if (_matcherLife == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Life);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherLife = matcher;
            }

            return _matcherLife;
        }
    }
}
