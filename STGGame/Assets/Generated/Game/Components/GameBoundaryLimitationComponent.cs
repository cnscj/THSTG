//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public STGU3D.BoundaryLimitationComponent boundaryLimitation { get { return (STGU3D.BoundaryLimitationComponent)GetComponent(GameComponentsLookup.BoundaryLimitation); } }
    public bool hasBoundaryLimitation { get { return HasComponent(GameComponentsLookup.BoundaryLimitation); } }

    public void AddBoundaryLimitation(UnityEngine.Rect newMovableArea) {
        var index = GameComponentsLookup.BoundaryLimitation;
        var component = (STGU3D.BoundaryLimitationComponent)CreateComponent(index, typeof(STGU3D.BoundaryLimitationComponent));
        component.movableArea = newMovableArea;
        AddComponent(index, component);
    }

    public void ReplaceBoundaryLimitation(UnityEngine.Rect newMovableArea) {
        var index = GameComponentsLookup.BoundaryLimitation;
        var component = (STGU3D.BoundaryLimitationComponent)CreateComponent(index, typeof(STGU3D.BoundaryLimitationComponent));
        component.movableArea = newMovableArea;
        ReplaceComponent(index, component);
    }

    public void RemoveBoundaryLimitation() {
        RemoveComponent(GameComponentsLookup.BoundaryLimitation);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherBoundaryLimitation;

    public static Entitas.IMatcher<GameEntity> BoundaryLimitation {
        get {
            if (_matcherBoundaryLimitation == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.BoundaryLimitation);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherBoundaryLimitation = matcher;
            }

            return _matcherBoundaryLimitation;
        }
    }
}
