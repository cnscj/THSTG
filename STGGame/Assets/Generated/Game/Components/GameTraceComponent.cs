//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public STGU3D.TraceComponent trace { get { return (STGU3D.TraceComponent)GetComponent(GameComponentsLookup.Trace); } }
    public bool hasTrace { get { return HasComponent(GameComponentsLookup.Trace); } }

    public void AddTrace(GameEntity newTarget, bool newIsAutoSearch, float newSearchRadius) {
        var index = GameComponentsLookup.Trace;
        var component = (STGU3D.TraceComponent)CreateComponent(index, typeof(STGU3D.TraceComponent));
        component.target = newTarget;
        component.isAutoSearch = newIsAutoSearch;
        component.searchRadius = newSearchRadius;
        AddComponent(index, component);
    }

    public void ReplaceTrace(GameEntity newTarget, bool newIsAutoSearch, float newSearchRadius) {
        var index = GameComponentsLookup.Trace;
        var component = (STGU3D.TraceComponent)CreateComponent(index, typeof(STGU3D.TraceComponent));
        component.target = newTarget;
        component.isAutoSearch = newIsAutoSearch;
        component.searchRadius = newSearchRadius;
        ReplaceComponent(index, component);
    }

    public void RemoveTrace() {
        RemoveComponent(GameComponentsLookup.Trace);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTrace;

    public static Entitas.IMatcher<GameEntity> Trace {
        get {
            if (_matcherTrace == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Trace);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTrace = matcher;
            }

            return _matcherTrace;
        }
    }
}
