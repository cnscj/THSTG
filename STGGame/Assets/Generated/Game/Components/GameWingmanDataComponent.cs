//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public STGU3D.WingmanDataComponent wingmanData { get { return (STGU3D.WingmanDataComponent)GetComponent(GameComponentsLookup.WingmanData); } }
    public bool hasWingmanData { get { return HasComponent(GameComponentsLookup.WingmanData); } }

    public void AddWingmanData(STGU3D.EWingmanType newWingmanType) {
        var index = GameComponentsLookup.WingmanData;
        var component = (STGU3D.WingmanDataComponent)CreateComponent(index, typeof(STGU3D.WingmanDataComponent));
        component.wingmanType = newWingmanType;
        AddComponent(index, component);
    }

    public void ReplaceWingmanData(STGU3D.EWingmanType newWingmanType) {
        var index = GameComponentsLookup.WingmanData;
        var component = (STGU3D.WingmanDataComponent)CreateComponent(index, typeof(STGU3D.WingmanDataComponent));
        component.wingmanType = newWingmanType;
        ReplaceComponent(index, component);
    }

    public void RemoveWingmanData() {
        RemoveComponent(GameComponentsLookup.WingmanData);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherWingmanData;

    public static Entitas.IMatcher<GameEntity> WingmanData {
        get {
            if (_matcherWingmanData == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.WingmanData);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherWingmanData = matcher;
            }

            return _matcherWingmanData;
        }
    }
}
