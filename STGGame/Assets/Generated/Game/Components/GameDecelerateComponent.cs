//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public STGU3D.DecelerateComponent decelerate { get { return (STGU3D.DecelerateComponent)GetComponent(GameComponentsLookup.Decelerate); } }
    public bool hasDecelerate { get { return HasComponent(GameComponentsLookup.Decelerate); } }

    public void AddDecelerate(float newSpeedRate, bool newIsDecelerating) {
        var index = GameComponentsLookup.Decelerate;
        var component = (STGU3D.DecelerateComponent)CreateComponent(index, typeof(STGU3D.DecelerateComponent));
        component.speedRate = newSpeedRate;
        component.isDecelerating = newIsDecelerating;
        AddComponent(index, component);
    }

    public void ReplaceDecelerate(float newSpeedRate, bool newIsDecelerating) {
        var index = GameComponentsLookup.Decelerate;
        var component = (STGU3D.DecelerateComponent)CreateComponent(index, typeof(STGU3D.DecelerateComponent));
        component.speedRate = newSpeedRate;
        component.isDecelerating = newIsDecelerating;
        ReplaceComponent(index, component);
    }

    public void RemoveDecelerate() {
        RemoveComponent(GameComponentsLookup.Decelerate);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDecelerate;

    public static Entitas.IMatcher<GameEntity> Decelerate {
        get {
            if (_matcherDecelerate == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Decelerate);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDecelerate = matcher;
            }

            return _matcherDecelerate;
        }
    }
}
